ChatApp Conversation 13/10/2024 16:33:25
=========================================

bot: Hello, how can I help?

user: Can you give a simple but complete example of using Node.js as the server to serve a basic static web page?

bot: Certainly! Below is a simple example of using Node.js to serve a basic static web page. We'll use the `http` module to create the server and the `fs` module to read the HTML file.

1. **Create an HTML file** (let's name it `index.html`):

```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Static Web Page</title>
</head>
<body>
    <h1>Welcome to My Static Web Page</h1>
    <p>This is a simple static web page served by Node.js.</p>
</body>
</html>
```

2. **Create a Node.js server file** (let's name it `server.js`):

```javascript
const http = require('http');
const fs = require('fs');
const path = require('path');

const hostname = '127.0.0.1';
const port = 3000;

const server = http.createServer((req, res) => {
    // Ensure that only requests for the root URL are served with the HTML file
    if (req.url === '/') {
        const filePath = path.join(__dirname, 'index.html');
        
        // Read the HTML file from the filesystem
        fs.readFile(filePath, (err, data) => {
            if (err) {
                res.statusCode = 500;
                res.setHeader('Content-Type', 'text/plain');
                res.end('Internal Server Error');
                return;
            }
            res.statusCode = 200;
            res.setHeader('Content-Type', 'text/html');
            res.end(data);
        });
    } else {
        res.statusCode = 404;
        res.setHeader('Content-Type', 'text/plain');
        res.end('Not Found');
    }
});

server.listen(port, hostname, () => {
    console.log(`Server running at http://${hostname}:${port}/`);
});
```

3. **Run the server**:

Make sure you have Node.js installed on your machine. Open your terminal, navigate to the directory where `server.js` is located, and run the following command:

```sh
node server.js
```

4. **Access the web page**:

Open your web browser and go to `http://127.0.0.1:3000/`. You should see the content of `index.html` displayed in your browser.

This example covers the basic setup of a Node.js server that serves a static HTML file. For more complex scenarios, you might want to use a framework like Express.js, which simplifies handling static files and routing.